#!/usr/bin/env sh

# Only source husky.sh if it exists (for pre-commit hook)
HUSKY_FILE="$(dirname -- "$0")/_/husky.sh"
if [ -f "$HUSKY_FILE" ]; then
  . "$HUSKY_FILE"
fi

# Get current timestamp
timestamp=$(date "+%Y-%m-%d %H:%M")
echo "Running task documentation validation at $timestamp"

validate_task_docs() {
  # If running manually (not in pre-commit), check all updates.md files
  if [ -z "$GIT_INDEX_FILE" ]; then
    files=$(find docs/working-memory/open -name "updates.md")
  else
    # In pre-commit, only check staged files
    files=$(git diff --cached --name-only | grep 'docs/working-memory/open/.*/updates.md' || true)
  fi

  if [ -z "$files" ]; then
    echo "No task documentation files found to validate"
    exit 0
  fi

  for file in $files; do
    echo "Validating $file structure..."
    
    # Check if Current Status is first section
    if ! head -n 5 "$file" | grep -q "^## Current Status"; then
      echo "❌ Error: Current Status must be the first section in $file"
      exit 1
    fi
    
    # Check for multiple Current Status sections
    if [ $(grep -c "^## Current Status" "$file") -gt 1 ]; then
      echo "❌ Error: Multiple Current Status sections found in $file"
      exit 1
    fi
    
    # Check for required sections
    for section in "What's working:" "What's not:" "Blocking issues:" "Next actions:"; do
      if ! grep -q "$section" "$file"; then
        echo "❌ Error: Missing required section '$section' in $file"
        exit 1
      fi
    done
    
    # Check for Progress History section
    if ! grep -q "^## Progress History" "$file"; then
      echo "❌ Error: Missing Progress History section in $file"
      exit 1
    fi
    
    echo "✅ $file structure validated"
  done
}

validate_task_docs 